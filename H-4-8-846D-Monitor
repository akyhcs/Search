import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Monitor {

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        String[] firstLine = bufferedReader.readLine().split(" ");
        int n = Integer.parseInt(firstLine[0]);
        int m = Integer.parseInt(firstLine[1]);
        int k = Integer.parseInt(firstLine[2]);
        int q = Integer.parseInt(firstLine[3]);

        int[] x = new int[q];
        int[] y = new int[q];
        int[] t = new int[q];

        int minTime = Integer.MAX_VALUE;
        int maxTime = Integer.MIN_VALUE;

        for (int i = 0; i < q; i++) {
            String[] line = bufferedReader.readLine().split(" ");
            x[i] = Integer.parseInt(line[0]) - 1;
            y[i] = Integer.parseInt(line[1]) - 1;
            t[i] = Integer.parseInt(line[2]);

            minTime = Math.min(minTime, t[i]);
            maxTime = Math.max(maxTime, t[i]);
        }

        int result = -1;
        int low = minTime;
        int high = maxTime;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            int[][] monitor = new int[n][m];

            for (int i = 0; i < q; i++) {
                if (t[i] <= mid) {
                    monitor[x[i]][y[i]] = 1;
                }
            }

            if (isMonitorBroken(monitor, n, m, k)) {
                result = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }

        System.out.println(result);
    }

    private static boolean isMonitorBroken(int[][] monitor, int n, int m, int k) {
        int[][] sum = new int[n + 1][m + 1];

        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                sum[i][j] = monitor[i - 1][j - 1] + sum[i - 1][j] + sum[i][j - 1] - sum[i - 1][j - 1];

                if (i >= k && j >= k && sum[i][j] - sum[i - k][j] - sum[i][j - k] + sum[i - k][j - k] == k * k) {
                    return true;
                }
            }
        }
        return false;
    }
}
