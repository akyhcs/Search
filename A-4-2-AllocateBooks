class Solution {
	public int splitArray(int[] nums, int m) {
		int max = 0, sum = 0;
		for (int num : nums) {
			max = Math.max(max, num);
			sum += num;
		}

		int left = max, right = sum;
		while (left < right) {
			int mid = left + (right - left) / 2;
			if (canSplit(nums, m, mid)) {
				right = mid;
			} else {
				left = mid + 1;
			}
		}
		return left;
	}

	private boolean canSplit(int[] nums, int m, int maxSum) {
		int count = 1, currentSum = 0;
		for (int num : nums) {
			if (currentSum + num > maxSum) {
				count++;
				currentSum = num;
				if (count > m) {
					return false;
				}
			} else {
				currentSum += num;
			}
		}
		return true;
	}
}
///////////////////////

https://leetcode.com/problems/split-array-largest-sum/
